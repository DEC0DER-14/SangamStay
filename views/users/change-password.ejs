<% layout('layouts/boilerplate') %>
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <div class="card shadow">
                <div class="card-body">
                    <h2 class="card-title text-center mb-4">Change Password</h2>
                    <% if (isGoogleUser && !user.hasPassword) { %>
                        <div class="alert alert-info">
                            <p>You haven't set a password yet. Please set your initial password to enable email/password login.</p>
                            <a href="/set-password" class="btn btn-primary">Set Password</a>
                        </div>
                    <% } else { %>
                        <form action="/change-password" method="POST" class="validated-form" novalidate>
                            <div class="mb-3">
                                <label for="oldPassword" class="form-label">Current Password</label>
                                <div class="input-group">
                                    <input type="password" class="form-control" id="oldPassword" name="oldPassword" required>
                                    <button class="btn btn-outline-secondary position-absolute end-0 bg-transparent border-0" 
                                        type="button" id="toggleOldPassword" style="z-index: 10; margin: 5px;">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <div class="invalid-feedback">Please enter your current password</div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="newPassword" class="form-label">New Password</label>
                                <div class="input-group">
                                    <input type="password" class="form-control" id="newPassword" name="newPassword" required
                                           minlength="8" pattern="^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*?&#])[A-Za-z\d@$!%*?&#]{8,}$">
                                    <button class="btn btn-outline-secondary position-absolute end-0 bg-transparent border-0" type="button" id="toggleNewPassword" style="z-index: 10; margin: 5px;">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                                <div class="form-text">
                                    Password must be at least 8 characters long and contain:
                                    <ul>
                                        <li>At least one letter</li>
                                        <li>At least one number</li>
                                        <li>At least one special character (@$!%*?&#)</li>
                                    </ul>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="confirmPassword" class="form-label">Confirm New Password</label>
                                <div class="input-group">
                                    <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                                    <button class="btn btn-outline-secondary position-absolute end-0 bg-transparent border-0" 
                                        type="button" id="toggleConfirmPassword" style="z-index: 10; margin: 5px;">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <div class="invalid-feedback">Passwords don't match</div>
                                </div>
                            </div>
                            <div id="passwordError" class="alert alert-danger d-none mb-3"></div>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary" id="submitBtn">Change Password</button>
                            </div>
                        </form>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Form validation
    const form = document.querySelector('.validated-form');
    if (form) {
        const newPassword = document.querySelector('#newPassword');
        const confirmPassword = document.querySelector('#confirmPassword');
        const submitButton = document.querySelector('#submitBtn');
        const passwordError = document.querySelector('#passwordError');

        function showError(message) {
            passwordError.textContent = message;
            passwordError.classList.remove('d-none');
            submitButton.innerHTML = 'Change Password';
            submitButton.disabled = false;
        }

        function showSuccess(message) {
            passwordError.textContent = message;
            passwordError.classList.remove('d-none');
            passwordError.classList.remove('alert-danger');
            passwordError.classList.add('alert-success');
        }

        form.addEventListener('submit', async function(event) {
            event.preventDefault(); // Always prevent default first
            passwordError.classList.add('d-none');
            passwordError.classList.remove('alert-success');
            passwordError.classList.add('alert-danger');

            // Reset button state
            submitButton.innerHTML = 'Change Password';
            submitButton.disabled = false;

            // Validate password requirements
            const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*?&#])[A-Za-z\d@$!%*?&#]{8,}$/;
            if (!passwordRegex.test(newPassword.value)) {
                showError('Password must be at least 8 characters long and contain at least one letter, one number, and one special character (@$!%*?&#)');
                return;
            }

            // Check if passwords match
            if (newPassword.value !== confirmPassword.value) {
                showError("Passwords don't match");
                return;
            }

            // If all validations pass
            submitButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Changing password...';
            submitButton.disabled = true;

            try {
                const formData = new FormData(form);
                const response = await fetch('/change-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        oldPassword: formData.get('oldPassword'),
                        newPassword: formData.get('newPassword'),
                        confirmPassword: formData.get('confirmPassword')
                    })
                });

                const data = await response.json();
                
                if (data.success) {
                    showSuccess(data.message);
                    setTimeout(() => {
                        window.location.href = data.redirect || '/login';
                    }, 2000);
                } else {
                    showError(data.message);
                    if (data.redirect) {
                        setTimeout(() => {
                            window.location.href = data.redirect;
                        }, 2000);
                    }
                }
            } catch (error) {
                showError('An error occurred. Please try again.');
            }
        });

        // Password visibility toggles
        const toggleOldPassword = document.querySelector('#toggleOldPassword');
        const toggleNewPassword = document.querySelector('#toggleNewPassword');
        const toggleConfirmPassword = document.querySelector('#toggleConfirmPassword');
        const oldPassword = document.querySelector('#oldPassword');

        toggleOldPassword.addEventListener('click', function() {
            const type = oldPassword.getAttribute('type') === 'password' ? 'text' : 'password';
            oldPassword.setAttribute('type', type);
            this.querySelector('i').classList.toggle('fa-eye');
            this.querySelector('i').classList.toggle('fa-eye-slash');
        });

        toggleNewPassword.addEventListener('click', function() {
            const type = newPassword.getAttribute('type') === 'password' ? 'text' : 'password';
            newPassword.setAttribute('type', type);
            this.querySelector('i').classList.toggle('fa-eye');
            this.querySelector('i').classList.toggle('fa-eye-slash');
        });

        toggleConfirmPassword.addEventListener('click', function() {
            const type = confirmPassword.getAttribute('type') === 'password' ? 'text' : 'password';
            confirmPassword.setAttribute('type', type);
            this.querySelector('i').classList.toggle('fa-eye');
            this.querySelector('i').classList.toggle('fa-eye-slash');
        });

        // Password validation
        newPassword.addEventListener('input', function() {
            const value = this.value;
            const hasLetter = /[A-Za-z]/.test(value);
            const hasNumber = /\d/.test(value);
            const hasSpecial = /[@$!%*?&#]/.test(value);
            const isLongEnough = value.length >= 8;

            this.setCustomValidity(
                (!isLongEnough && 'Password must be at least 8 characters long.') ||
                (!hasLetter && 'Password must contain at least one letter.') ||
                (!hasNumber && 'Password must contain at least one number.') ||
                (!hasSpecial && 'Password must contain at least one special character (@$!%*?&#).') ||
                ''
            );
        });
    }
</script> 